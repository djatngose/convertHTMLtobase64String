
<html>
<head>
    <meta charset="utf-8" />
    <style>
 @@media print {
* {
    -webkit-print-color-adjust: exact !important; /*Chrome, Safari */
    color-adjust: exact !important;  /*Firefox*/

  }
  
        body {
            /*padding-top: 15mm;*/
            margin:0 !important;
            padding:0 !important;
        }
}

        @@page {
      
            size: A4;
            margin: 0;
            size: landscape;
        margin-bottom:100px;
    
        }
    

        #my-text {
            position: relative;
        }

    </style>
</head>
<body >
    <div id="result12"></div>
    <iframe id="pdf" src="../Reports/uuuuu.pdf" width="1000" height="1800" frameborder="0" marginheight="0" marginwidth="0"></iframe>
    @*<iframe id="printf" name="printf" onloadeddata="loadData()" style="display:none"></iframe>*@
</body>
</html>

@section scripts
{
      

    <script>
        var data1;
        window.onload = function () {

            this.setTimeout(function () {

                //window.frames["printf"].focus();
                //window.frames["printf"].print();
            },2000)
              

        }
        const b64toBlob = (b64Data, contentType = '', sliceSize = 512) => {

            var byteCharacters = atob(b64Data);
            var byteArrays = [];

            for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {
                var slice = byteCharacters.slice(offset, offset + sliceSize);

                var byteNumbers = new Array(slice.length);
                for (var i = 0; i < slice.length; i++) {
                    byteNumbers[i] = slice.charCodeAt(i);
                }

                var byteArray = new Uint8Array(byteNumbers);

                byteArrays.push(byteArray);
            }


            try {
                blob = new Blob(byteArrays, { type: contentType });
            }
            catch (e) {
                // TypeError old chrome and FF
                window.BlobBuilder = window.BlobBuilder ||
                    window.WebKitBlobBuilder ||
                    window.MozBlobBuilder ||
                    window.MSBlobBuilder;
                if (e.name == 'TypeError' && window.BlobBuilder) {
                    var bb = new BlobBuilder();
                    bb.append(byteArrays);
                    blob = bb.getBlob(contentType);
                }
                else if (e.name == "InvalidStateError") {
                    // InvalidStateError (tested on FF13 WinXP)
                    blob = new Blob(byteArrays, { type: contentType });
                }
                else {
                    // We're screwed, blob constructor unsupported entirely   
                }

                
            }
            return blob;
        }
        function print_pdf(url) {
            var id = 'printf', html = '<iframe id="' + id + '" src="' + url + '" style="display:none"></iframe>';
            $('body').append(html);
            // wait for the iFrame to fully load and call the print() function afterwards
            $('#' + id).load(function () {
                document.getElementById(id).contentWindow.print();
            });
        }
        $(function () {
           
            $.get("api/values/1", function (data) {
               // var dec = window.atob(data);
               // document.getElementById("result12").innerHTML = decodeURIComponent(escape(dec));

                var html = '<iframe id="pdf" src="data:application/pdf;base64,' + encodeURI(data)+'" width="1000" height="1800" frameborder="0" marginheight="0" marginwidth="0"></iframe><span>21212</span>';
                var win = window.open('');
                win.document.head.innerHTML = '<title>Hi</title></head>';
                win.document.body.innerHTML = '<body onload="window.print()">' + html + '</body>';
                setTimeout(function () {
                    const iframeEle = document.getElementById("pdf");
                    iframeEle.contentWindow.print();
                    win.close();
                   // win.print();
                },1000)
                

                //var blob = new Blob([data], { type: 'application/pdf' });
                //var blob = b64toBlob(data, "application/pdf");

                //var blobUrl = URL.createObjectURL(blob);
               

                //$("#printf").attr("src", blobUrl);
                //setTimeout(function () {
                //    window.URL.revokeObjectURL(blobUrl);
                //    const iframeEle = document.getElementById("printf");
                //    if (iframeEle) {
                //        iframeEle.contentWindow.print();
                //    }
                //},2000)
             
            });


            //function printIframe(id) {
            //    var iframe = document.frames ? document.frames[id] : document.getElementById(id);
            //    var ifWin = iframe.contentWindow || iframe;
            //    ifWin.focus();
            //    var target = document.getElementById('f1');
            //    try {
            //        target.contentWindow.document.execCommand('print', false, null);
            //    } catch(e) {
            //        target.contentWindow.print();
            //    }

            //    return false;
            //}
            //var doPrinting = function (id)
            //{
            //    var pdfObject = document.getElementById(id);
              
            //        pdfObject.print();
              
            //};
            //function printIframe1(data) {
            //    var proxyIframe = document.createElement('iframe');
            //    var body = document.getElementsByTagName('body')[0];
            //    body.appendChild(proxyIframe);
            //    proxyIframe.style.width = '100%';
            //    proxyIframe.style.height = '100%';
              
      
            //    var contentWindow = proxyIframe.contentWindow;
            //    contentWindow.document.open();
            //    // Set dimensions according to your needs.
            //    // You may need to calculate the dynamically after the content has loaded
            //    contentWindow.document.write('<iframe id="pdf" src="../Reports/uuuuu.pdf"  width="1000" height="1800" frameborder="0" marginheight="0" marginwidth="0">');
            //    contentWindow.document.close();
            //    //setTimeout(function () {
            //    //    proxyIframe.contentWindow.print()
            //    //}, 2000)
        
            //    proxyIframe.document.write('<body onload="window.print()">dddd</body>');
            //    proxyIframe.document.close();
            //}
          
        });
        //window.onload = function () {
        //    //window.frames["pdf"].focus();
        //    //window.frames["pdf"].print();
        //    var frm = document.getElementById("pdf").contentWindow;
        //    frm.focus();// focus on contentWindow is needed on some ie versions
        //    frm.print();
        //    var newWin = window.frames["pdf"];
        //    newWin.contentDocument.write('<body onload="window.print()">dddd</body>');
        //    newWin.contentDocument.close();
        //}
    </script>
 
}
